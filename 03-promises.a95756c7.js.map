{"mappings":"iiBAUA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAASC,GAChC,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC9B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACRH,EACHF,EAAQ,CAACH,WAASC,UAGlBG,EAAO,CAACJ,WAASC,S,GAEdA,E,IApCYQ,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAsBC,GACtBA,EAAMC,iBAMN,IAJA,IAAIC,EAAaF,EAAMG,cAAcd,MAAMe,cACrCC,EAAiBL,EAAMG,cAAcG,KAAKF,cAC1CG,EAAcP,EAAMG,cAAcK,OAAOJ,cAEtCK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACvCtB,EAAesB,EAAGP,GACjBQ,MAAK,SAAAC,G,IAAEvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOC,QAChB,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAG7C2B,OAAM,SAAAL,G,IAAEvB,EAAQuB,EAARvB,SAASC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOI,QAChB,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAG3Ca,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n\nimport Notiflix from \"notiflix\";\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\nevent.preventDefault();\n\nlet inputDelay = event.currentTarget.delay.valueAsNumber;\nconst inputDelayStep = event.currentTarget.step.valueAsNumber;\nconst inputAmount = event.currentTarget.amount.valueAsNumber;\n\nfor (let i = 1; i <= inputAmount; i += 1) {\ncreatePromise (i, inputDelay)\n.then(({position, delay}) => {\nNotiflix.Notify.success(\n`✅ Fulfilled promise ${position} in ${delay}ms`\n);\n})\n.catch(({position,delay}) => {\nNotiflix.Notify.failure(\n`❌ Rejected promise ${position} in ${delay}ms`\n);\n});\ninputDelay += inputDelayStep;\n}\n}\n\nfunction createPromise(position,delay) {\nreturn new Promise ((resolve, reject) => {\nconst shouldResolve = Math.random() > 0.3;\nsetTimeout(() => {\nif(shouldResolve){\nresolve({position,delay});\n}\nelse {\nreject({position,delay});\n}\n}, delay)\n});\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","inputDelay","currentTarget","valueAsNumber","inputDelayStep","step","inputAmount","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.a95756c7.js.map"}
{"mappings":"qhBAUA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAASC,GAChC,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC9B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACRH,EACHF,EAAQ,C,SAACH,E,MAASC,IAGlBG,EAAO,C,SAACJ,E,MAASC,GAAO,GAErBA,EAAM,G,CApCMQ,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAsBC,GACtBA,EAAMC,iBAEN,IAAIC,EAAaF,EAAMG,cAAcd,MAAMe,cAC3C,MAAMC,EAAiBL,EAAMG,cAAcG,KAAKF,cAC1CG,EAAcP,EAAMG,cAAcK,OAAOJ,cAE/C,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACvCtB,EAAesB,EAAGP,GACjBQ,MAAK,EAACtB,SAACA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOC,QAChB,gDACG,IAEFC,OAAM,EAAC1B,SAACA,EAAQC,MAACA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QAChB,+CACC,IAEDb,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n\nimport Notiflix from \"notiflix\";\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\nevent.preventDefault();\n\nlet inputDelay = event.currentTarget.delay.valueAsNumber;\nconst inputDelayStep = event.currentTarget.step.valueAsNumber;\nconst inputAmount = event.currentTarget.amount.valueAsNumber;\n\nfor (let i = 1; i <= inputAmount; i += 1) {\ncreatePromise (i, inputDelay)\n.then(({position, delay}) => {\nNotiflix.Notify.success(\n'✅ Fulfilled promise ${position} in ${delay}ms'\n);\n})\n.catch(({position,delay}) => {\nNotiflix.Notify.failure(\n'❌ Rejected promise ${position} in ${delay}ms'\n);\n});\ninputDelay += inputDelayStep;\n}\n}\n\nfunction createPromise(position,delay) {\nreturn new Promise ((resolve, reject) => {\nconst shouldResolve = Math.random() > 0.3;\nsetTimeout(() => {\nif(shouldResolve){\nresolve({position,delay});\n}\nelse {\nreject({position,delay});\n}\n}, delay)\n});\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","inputDelay","currentTarget","valueAsNumber","inputDelayStep","step","inputAmount","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.04662c18.js.map"}